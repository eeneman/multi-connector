<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.0 on darwin)" generated="20210403 10:28:09.572" rpa="false">
<suite id="s1" name="Connector Tests" source="/Volumes/ext_drive/smarthala/04_Eeneman/src/multi-connector/robottests/connectors/kerava-indoor/connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20210403 10:28:10.525" level="INFO">${body} = {'productCode': 'kerava-indoor', 'parameters': {'idOfLocation': '5d779cb9541b0613acf44c25', 'start': '1614162002000', 'end': '1614165002000'}}</msg>
<status status="PASS" starttime="20210403 10:28:10.525" endtime="20210403 10:28:10.525"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20210403 10:28:10.526" level="INFO">${now} = 2021-04-03T07:28:10+00:00</msg>
<status status="PASS" starttime="20210403 10:28:10.525" endtime="20210403 10:28:10.526"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20210403 10:28:10.527" endtime="20210403 10:28:10.527"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20210403 10:28:10.527" endtime="20210403 10:28:10.528"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20210403 10:28:10.529" level="INFO">${json_string} = {"productCode": "kerava-indoor", "parameters": {"idOfLocation": "5d779cb9541b0613acf44c25", "start": "1614162002000", "end": "1614165002000"}, "timestamp": "2021-04-03T07:28:10+00:00"}</msg>
<status status="PASS" starttime="20210403 10:28:10.528" endtime="20210403 10:28:10.529"></status>
</kw>
<msg timestamp="20210403 10:28:10.529" level="INFO">${body} = {'productCode': 'kerava-indoor', 'parameters': {'idOfLocation': '5d779cb9541b0613acf44c25', 'start': '1614162002000', 'end': '1614165002000'}, 'timestamp': '2021-04-03T07:28:10+00:00'}</msg>
<status status="PASS" starttime="20210403 10:28:10.524" endtime="20210403 10:28:10.529"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20210403 10:28:10.531" level="INFO">${signature} = 3dX83kkdb+/jJPaBPOgbjSvnvUVBA/BqV7MOa3XQKvo=</msg>
<status status="PASS" starttime="20210403 10:28:10.530" endtime="20210403 10:28:10.531"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20210403 10:28:10.531" endtime="20210403 10:28:10.531"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20210403 10:28:10.532" endtime="20210403 10:28:10.709"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20210403 10:28:10.710" level="INFO">
{
    "type": "object",
    "properties": {
        "error": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "default": 500
                },
                "message": {
                    "type": "string",
                    "default": "Cannot read property 'measurements' of undefined"
                }
            },
            "required": [
                "message",
                "status"
            ]
        }
    },
    "required": [
        "error"
    ]
}</msg>
<status status="PASS" starttime="20210403 10:28:10.710" endtime="20210403 10:28:10.733"></status>
</kw>
<status status="PASS" starttime="20210403 10:28:10.529" endtime="20210403 10:28:10.733"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<msg timestamp="20210403 10:28:10.741" level="FAIL">500 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'integer'}

On instance:
    500</msg>
<status status="FAIL" starttime="20210403 10:28:10.734" endtime="20210403 10:28:10.741"></status>
</kw>
<status status="FAIL" starttime="20210403 10:28:10.522" endtime="20210403 10:28:10.741" critical="yes">500 is not one of [200]

Failed validating 'enum' in schema:
    {'enum': [200], 'type': 'integer'}

On instance:
    500</status>
</test>
<doc>Senaatti - REST</doc>
<status status="FAIL" starttime="20210403 10:28:09.576" endtime="20210403 10:28:10.742"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
