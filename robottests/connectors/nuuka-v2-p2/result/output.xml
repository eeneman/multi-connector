<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.9.9 on darwin)" generated="20211214 14:11:26.236" rpa="false">
<suite id="s1" name="Connector Tests" source="/Users/marthala/mydata/04_Eeneman/src/multi-connector/robottests/connectors/nuuka-v2-p2/connector_tests.robot">
<test id="s1-t1" name="fetch, 200">
<kw name="Get Body">
<assign>
<var>${body}</var>
</assign>
<kw name="Copy Dictionary" library="Collections">
<doc>Returns a copy of the given dictionary.</doc>
<arguments>
<arg>${BROKER_BODY}</arg>
<arg>deepcopy=True</arg>
</arguments>
<assign>
<var>${body}</var>
</assign>
<msg timestamp="20211214 14:11:26.425" level="INFO">${body} = {'productCode': 'nuuka-v2-p2', 'parameters': {'ids': [{'buildingId': '2410', 'dataPointId': '48268'}], 'dataTypes': ['MeasureElectricityConsumptionKilowattHour', 'MeasureHeatingElectricityConsumptionK...</msg>
<status status="PASS" starttime="20211214 14:11:26.425" endtime="20211214 14:11:26.426"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>time_zone=UTC</arg>
<arg>result_format=%Y-%m-%dT%H:%M:%S+00:00</arg>
</arguments>
<assign>
<var>${now}</var>
</assign>
<msg timestamp="20211214 14:11:26.426" level="INFO">${now} = 2021-12-14T12:11:26+00:00</msg>
<status status="PASS" starttime="20211214 14:11:26.426" endtime="20211214 14:11:26.426"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>timestamp</arg>
<arg>${now}</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.426" endtime="20211214 14:11:26.426"></status>
</kw>
<kw name="Set To Dictionary" library="Collections">
<doc>Adds the given ``key_value_pairs`` and ``items`` to the ``dictionary``.</doc>
<arguments>
<arg>${body}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.426" endtime="20211214 14:11:26.426"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the result.</doc>
<arguments>
<arg>json.dumps(${body})</arg>
<arg>json</arg>
</arguments>
<assign>
<var>${json_string}</var>
</assign>
<msg timestamp="20211214 14:11:26.427" level="INFO">${json_string} = {"productCode": "nuuka-v2-p2", "parameters": {"ids": [{"buildingId": "2410", "dataPointId": "48268"}], "dataTypes": ["MeasureElectricityConsumptionKilowattHour", "MeasureHeatingElectricityConsumptionK...</msg>
<status status="PASS" starttime="20211214 14:11:26.426" endtime="20211214 14:11:26.427"></status>
</kw>
<msg timestamp="20211214 14:11:26.427" level="INFO">${body} = {'productCode': 'nuuka-v2-p2', 'parameters': {'ids': [{'buildingId': '2410', 'dataPointId': '48268'}], 'dataTypes': ['MeasureElectricityConsumptionKilowattHour', 'MeasureHeatingElectricityConsumptionK...</msg>
<status status="PASS" starttime="20211214 14:11:26.425" endtime="20211214 14:11:26.427"></status>
</kw>
<kw name="Fetch Data Product">
<arguments>
<arg>${body}</arg>
</arguments>
<kw name="Calculate Pot Signature" library="PoTLib">
<arguments>
<arg>${body}</arg>
<arg>${CLIENT_SECRET}</arg>
</arguments>
<assign>
<var>${signature}</var>
</assign>
<msg timestamp="20211214 14:11:26.428" level="INFO">${signature} = htfnRCSqTKF0sxlhKK+ciXhUYvhz04lkwCisj+YDAO0=</msg>
<status status="PASS" starttime="20211214 14:11:26.427" endtime="20211214 14:11:26.428"></status>
</kw>
<kw name="Set Headers" library="REST">
<tags>
<tag>settings</tag>
</tags>
<doc>*Sets new request headers or updates the existing.*</doc>
<arguments>
<arg>{"x-pot-signature": "${signature}", "x-app-token": "${APP_TOKEN}"}</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.428" endtime="20211214 14:11:26.428"></status>
</kw>
<kw name="Post" library="REST">
<tags>
<tag>http</tag>
</tags>
<doc>*Sends a POST request to the endpoint.*</doc>
<arguments>
<arg>${CONNECTOR_PATH}</arg>
<arg>${body}</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.428" endtime="20211214 14:11:26.807"></status>
</kw>
<kw name="Output Schema" library="REST">
<tags>
<tag>I/O</tag>
</tags>
<doc>*Outputs JSON Schema to terminal or a file.*</doc>
<arguments>
<arg>response body</arg>
</arguments>
<msg timestamp="20211214 14:11:26.808" level="INFO">
{
    "type": "object",
    "properties": {
        "@context": {
            "type": "string",
            "default": "https://standards.oftrust.net/v2/Context/DataProductContext/Sensor/"
        },
        "data": {
            "type": "object",
            "properties": {
                "sensors": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "measurements": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "@type": {
                                            "type": "string"
                                        },
                                        "timestamp": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "type": "integer"
                                        }
                                    },
                                    "required": [
                                        "@type",
                                        "timestamp",
                                        "value"
                                    ]
                                }
                            },
                            "id": {
                                "type": "object",
                                "properties": {
                                    "buildingId": {
                                        "type": "string"
                                    },
                                    "dataPointId": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "buildingId",
                                    "dataPointId"
                                ]
                            }
                        },
                        "required": [
                            "id",
                            "measurements"
                        ]
                    },
                    "default": [
                        {
                            "measurements": [
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T09:00:00+02:00",
                                    "value": 91
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T08:00:00+02:00",
                                    "value": 90
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T07:00:00+02:00",
                                    "value": 91
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T06:00:00+02:00",
                                    "value": 89
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T05:00:00+02:00",
                                    "value": 88
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T04:00:00+02:00",
                                    "value": 87
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T03:00:00+02:00",
                                    "value": 88
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T02:00:00+02:00",
                                    "value": 84
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T01:00:00+02:00",
                                    "value": 87
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-27T00:00:00+02:00",
                                    "value": 85
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T23:00:00+02:00",
                                    "value": 85
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T22:00:00+02:00",
                                    "value": 91
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T21:00:00+02:00",
                                    "value": 92
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T20:00:00+02:00",
                                    "value": 90
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T19:00:00+02:00",
                                    "value": 112
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T18:00:00+02:00",
                                    "value": 148
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T17:00:00+02:00",
                                    "value": 143
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T16:00:00+02:00",
                                    "value": 146
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T15:00:00+02:00",
                                    "value": 167
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T14:00:00+02:00",
                                    "value": 148
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T13:00:00+02:00",
                                    "value": 154
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T12:00:00+02:00",
                                    "value": 150
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T11:00:00+02:00",
                                    "value": 149
                                },
                                {
                                    "@type": "MeasureHeatingElectricityConsumptionKilowattHour",
                                    "timestamp": "2021-11-26T10:00:00+02:00",
                                    "value": 144
                                }
                            ],
                            "id": {
                                "buildingId": "2410",
                                "dataPointId": "48268"
                            }
                        }
                    ]
                }
            },
            "required": [
                "sensors"
            ]
        },
        "signature": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string",
                    "default": "RsaSignature2018"
                },
                "created": {
                    "type": "string",
                    "default": "2021-12-14T14:11:26+02:00"
                },
                "creator": {
                    "type": "string",
                    "default": "http://localhost:8080/translator/v1/public.key"
                },
                "signatureValue": {
                    "type": "string",
                    "default": "Yx483wGYjXs8S9MTk6iyimh84rnGvAZvnI46Jzi5oOZ82D9GS3xVi9UzPhU2njCD27bELtjIi5FJgA8tD09XSiedraMwhvWilaK/tkQ7UGIqpjYnzirxG1qkcKf6JB12AhQf25UJuBk/EFBd2gE6oAEEJ8xDW0bjOPuQASxA26En2dZzgmTpDePP1bn+WNiktdozpHC8eANaXxNvuVfYJiCnAmFJ04BDmscBtd1hlPUZDD/vWbBO5isfiDi0Gu78/J8kYnsMISyoC5lIfDvnxZCSgFL2kNdtZljeIwQxLRoHIJsUXlvsNEcPYePBFDfGGJ8b+WgMbfnMLRtpTNVvvJL/OWr5JD24+lPwxUPoH8CBDjFCT75wa8MdBWPbkT7FcXVs5uERU5kD28jgjJ4RTFB6VMZ9jaU4lTAXmmlNdrBhTPC6s70aLxTx53ppEeqodUZaIDjkOpCVvGnF4tWJYzgHMBGRRdnTy8Ka39W5oB1qSm2wdKa8Zqb9nAZTJ6MekbuUZKZtJdsLXNGz+XHWNHBsw45VKnU5E9/Mi5NXASQ4ZixLoDgHYQ3L8onNBr/xIQ3NrjOFGYaZYPEra7e/nTiS5oqGg+dCVxfJN6iVYmX2KADKQPz+gHBy3k1+hgMprxlf3Pnws0CunwDVGOu8FZxbfwkCjbNVTgkOgz/LhsY="
                }
            },
            "required": [
                "created",
                "creator",
                "signatureValue",
                "type"
            ]
        }
    },
    "required": [
        "@context",
        "data",
        "signature"
    ]
}</msg>
<status status="PASS" starttime="20211214 14:11:26.807" endtime="20211214 14:11:26.815"></status>
</kw>
<status status="PASS" starttime="20211214 14:11:26.427" endtime="20211214 14:11:26.816"></status>
</kw>
<kw name="Integer" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON integer.*</doc>
<arguments>
<arg>response status</arg>
<arg>200</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.816" endtime="20211214 14:11:26.816"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body @context</arg>
<arg>https://standards.oftrust.net/v2/Context/DataProductContext/Sensor/</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.816" endtime="20211214 14:11:26.817"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.817" endtime="20211214 14:11:26.820"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.820" endtime="20211214 14:11:26.821"></status>
</kw>
<kw name="Object" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON object.*</doc>
<arguments>
<arg>response body data sensors 0 id</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.821" endtime="20211214 14:11:26.822"></status>
</kw>
<kw name="Array" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON array.*</doc>
<arguments>
<arg>response body data sensors 0 measurements</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.822" endtime="20211214 14:11:26.823"></status>
</kw>
<kw name="String" library="REST">
<tags>
<tag>assertions</tag>
</tags>
<doc>*Asserts the field as JSON string.*</doc>
<arguments>
<arg>response body data sensors 0 measurements 0 @type</arg>
</arguments>
<status status="PASS" starttime="20211214 14:11:26.823" endtime="20211214 14:11:26.824"></status>
</kw>
<status status="PASS" starttime="20211214 14:11:26.424" endtime="20211214 14:11:26.824" critical="yes"></status>
</test>
<doc>Nuuka-v2-p2 - REST</doc>
<status status="PASS" starttime="20211214 14:11:26.237" endtime="20211214 14:11:26.824"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Connector Tests">Connector Tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
